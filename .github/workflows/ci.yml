name: CI
on:
  pull_request:
  workflow_dispatch:
jobs:
  test-suite:
    name: Test suite
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/setup-php-action
      - name: Setup PHP 8.1 with Xdebug 3.x
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: xdebug

      # https://github.com/marketplace/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run test suite
        run: vendor/bin/phpunit --testsuite unit --fail-on-incomplete  --log-junit junit.xml --coverage-clover clover.xml

      # https://github.com/marketplace/actions/publish-unit-test-results
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1.31
        if: always()
        with:
          files: "junit.xml"
          check_name: "Unit test results"

      # https://github.com/marketplace/actions/codecov
      - name: Send test coverage to codecov.io
        uses: codecov/codecov-action@v2.1.0
        with:
          files: clover.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

      - name: Check minimum required code coverage
        run: |
          CODE_COVERAGE=$(vendor/bin/coverage-checker clover.xml 100 --processor=clover-coverage)
          echo ${CODE_COVERAGE}
          if [[ ${CODE_COVERAGE} == *"test coverage, got"* ]] ; then
            exit 1;
          fi

  php-stan-php-cs:
    name: PHPStan (level 9) & PHPcs
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/setup-php-action
      - name: Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      # https://github.com/marketplace/actions/checkout
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: composer install --prefer-dist

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse

      - name: Run PHPcs fixer dry-run
        run: vendor/bin/php-cs-fixer fix --dry-run --stop-on-violation --config=.php-cs-fixer.dist.php
